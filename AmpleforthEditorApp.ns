Newspeak3
'Root'
class AmpleforthEditorApp packageUsing: manifest = (
(*
The intent here was to create an app that would edit an arbitrary Ampleforth document. The idea at the time was that we would use the HTML of the document coupled with the vfuel of this app, in a URL of the form: 
  https://DocName.html?snapshot=AmpleforthEditorApp.vfuel
However, this has several problems. The first is that it ends to display the document twice - once without live Newspeak widgets and once with them (see commnts in #main:platform: below). The second is that non-standard classes and documents will be missing. The third is that the persistent format is now a zip file, not an HTML alone. So this needs rethinking. 
*)
	| 
    private HopscotchWebIDE = manifest HopscotchWebIDE packageUsing: manifest.
    |
) (
public main: platform args: args = (
  |
  ide =  HopscotchWebIDE ideUsingPlatform: platform.
  page <Alien[Document]> = platform js global at: 'document'.
  docs <Documents> = ide documents.
  doc <Document> = docs freshDocumentFromDOM: page.
  ds <DocumentSubject> = docs DocumentSubject onModel: doc.
  candidates <Alien[Array[Element]]> = page getElementsByClassName: #ampleforthDocumentBody.
  ampleforthDocumentBody <Alien[Element] | Nil> = ((candidates at: 'length') = 0) ifFalse: [candidates at: 0].  
  |
  (* Issue is that we display the contents twice - once without live widgets and once in the editor. 
    We need to replace the ampleforthDocumentBody div with the editor.
  *)
  (ampleforthDocumentBody isNil not)  ifTrue: [
    ampleforthDocumentBody at: #innerHTML put: ''.
    platform hopscotch Window into: ampleforthDocumentBody openSubject: ds
    ]
)
) : (
)
